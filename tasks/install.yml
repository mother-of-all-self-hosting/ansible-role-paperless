# SPDX-FileCopyrightText: 2024 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2024 Bergruebe
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Ensure Paperless-ngx paths exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0700"
    owner: "{{ paperless_uid }}"
    group: "{{ paperless_gid }}"
  with_items:
    - "{{ paperless_base_path }}"
    - "{{ paperless_media_path }}"
    - "{{ paperless_data_path }}"
    - "{{ paperless_export_path }}"
    - "{{ paperless_consume_path }}"

- name: Ensure Paperless-ngx Traefik labels are installed
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0640"
    owner: "{{ paperless_uid }}"
    group: "{{ paperless_gid }}"
  with_items:
    - { src: "{{ role_path }}/templates/labels.j2", dest: "{{ paperless_base_path }}/labels" }
    - { src: "{{ role_path }}/templates/tika-labels.j2", dest: "{{ paperless_base_path }}/tika-labels", when: paperless_tika_enabled }
    - { src: "{{ role_path }}/templates/gotenberg-labels.j2", dest: "{{ paperless_base_path }}/gotenberg-labels", when: paperless_gotenberg_enabled }

- name: Ensure Paperless-ngx configuration files installed
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0640"
    owner: "{{ paperless_uid }}"
    group: "{{ paperless_gid }}"
  with_items:
    - { src: "{{ role_path }}/templates/env.j2", dest: "{{ paperless_base_path }}/env" }
    - { src: "{{ role_path }}/templates/tika-env.j2", dest: "{{ paperless_base_path }}/tika-env", when: paperless_tika_enabled }
    - { src: "{{ role_path }}/templates/gotenberg-env.j2", dest: "{{ paperless_base_path }}/gotenberg-env", when: paperless_gotenberg_enabled }

- name: Ensure Paperless-ngx container image is pulled
  community.docker.docker_image:
    name: "{{ item.image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
  with_items:
    - { image: "{{ paperless_container_image }}" }
    - { image: "{{ paperless_tika_container_image }}", when: paperless_tika_enabled }
    - { image: "{{ paperless_gotenberg_container_image }}", when: paperless_gotenberg_enabled }
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Paperless-ngx container network is created via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.docker.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ paperless_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure Paperless-ngx container network is created via ansible.builtin.command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: >-
      {{ devture_systemd_docker_base_host_command_docker }} network create
      {% if devture_systemd_docker_base_ipv6_enabled %}--ipv6{% endif %}
      {{ devture_systemd_docker_base_container_networks_driver_options_string }}
      {{ paperless_container_network }}
  register: network_creation_result
  changed_when: network_creation_result.rc == 0
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr

- name: Ensure Paperless-ngx systemd services are present
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  with_items:
    - src: "{{ role_path }}/templates/systemd/paperless.service.j2"
      dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ paperless_identifier }}.service"
    - src: "{{ role_path }}/templates/systemd/paperless-tika.service.j2"
      dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ paperless_tika_identifier }}.service"
      when: paperless_tika_enabled
    - src: "{{ role_path }}/templates/systemd/paperless-gotenberg.service.j2"
      dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ paperless_gotenberg_identifier }}.service"
      when: paperless_gotenberg_enabled
