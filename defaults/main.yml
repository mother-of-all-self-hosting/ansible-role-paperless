# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Julian-Samuel Geb√ºhr
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

# Project source code URL: https://github.com/paperless-ngx/paperless-ngx

paperless_enabled: true

paperless_identifier: paperless
paperless_base_path: "/{{ paperless_identifier }}"
paperless_media_path: "{{ paperless_base_path }}/media"
paperless_data_path: "{{ paperless_base_path }}/data"
paperless_export_path: "{{ paperless_base_path }}/export"
paperless_consume_path: "{{ paperless_base_path }}/consume"
paperless_container_media_path: "/usr/src/paperless/media"
paperless_container_data_path: "/usr/src/paperless/data"
paperless_container_export_path: "/usr/src/paperless/export"
paperless_container_consume_path: "/usr/src/paperless/consume"

# renovate: datasource=docker depName=ghcr.io/paperless-ngx/paperless-ngx versioning=semver
paperless_version: "2.15.2"

paperless_uid: ''
paperless_gid: ''

# The hostname at which Paperless-ngx is served.
paperless_hostname: ''

paperless_scheme: https

paperless_container_image: "{{ paperless_container_image_registry_prefix }}paperless-ngx/paperless-ngx:{{ paperless_container_image_tag }}"
paperless_container_image_tag: "{{ paperless_version }}"
paperless_container_image_registry_prefix: "{{ paperless_container_image_registry_prefix_upstream }}"
paperless_container_image_registry_prefix_upstream: "{{ paperless_container_image_registry_prefix_upstream_default }}"
paperless_container_image_registry_prefix_upstream_default: ghcr.io/
paperless_container_image_force_pull: "{{ paperless_container_image.endswith(':latest') }}"

# Controls whether the Paperless-ngx container exposes its HTTP port (as defined by `paperless_container_http_port`).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:8731"), or empty string to not expose.
paperless_container_http_host_bind_port: ""

# The base container network. It will be auto-created by this role if it doesn't exist already.
paperless_container_network: '{{ paperless_identifier }}'

# The port number in the container
paperless_container_http_port: 8000

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
paperless_container_additional_networks: "{{ paperless_container_additional_networks_auto + paperless_container_additional_networks_custom }}"
paperless_container_additional_networks_auto: []
paperless_container_additional_networks_custom: []

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
paperless_container_additional_volumes: []

# paperless_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `roles/custom/paperless_paperless/templates/labels.j2` for details.
#
# To inject your own other container labels, see `paperless_container_labels_additional_labels`.
paperless_container_labels_traefik_enabled: false
paperless_container_labels_traefik_docker_network: ""
paperless_container_labels_traefik_entrypoints: web-secure
paperless_container_labels_traefik_priority: 0
paperless_container_labels_traefik_tls: "{{ paperless_container_labels_traefik_entrypoints != 'web' }}"
paperless_container_labels_traefik_tls_certResolver: default  # noqa var-naming

paperless_container_labels_traefik_hostname: "{{ paperless_hostname }}"
paperless_container_labels_traefik_rule: "Host(`{{ paperless_container_labels_traefik_hostname }}`)"

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `paperless_container_labels_traefik_additional_response_headers_custom`
paperless_container_labels_traefik_additional_request_headers: "{{ paperless_container_labels_traefik_additional_request_headers_auto | combine(paperless_container_labels_traefik_additional_request_headers_custom) }}"
paperless_container_labels_traefik_additional_request_headers_auto: {}
paperless_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `paperless_container_labels_traefik_additional_response_headers_custom`
paperless_container_labels_traefik_additional_response_headers: "{{ paperless_container_labels_traefik_additional_response_headers_auto | combine(paperless_container_labels_traefik_additional_response_headers_custom) }}"
paperless_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': paperless_http_header_xss_protection} if paperless_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': paperless_http_header_content_type_options} if paperless_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': paperless_http_header_content_security_policy} if paperless_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': paperless_http_header_content_permission_policy} if paperless_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': paperless_http_header_strict_transport_security} if paperless_http_header_strict_transport_security and paperless_container_labels_traefik_tls else {})
  }}
paperless_container_labels_traefik_additional_response_headers_custom: {}

# paperless_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `roles/custom/collabora_online/templates/labels.j2` for details.
#
# Example:
# paperless_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
paperless_container_labels_additional_labels: ''

# Specifies how often the container health-check will run.
#
# For Traefik based setups, it's important that the interval is short,
# because the interval value also specifies the "initial wait time".
# This is a Docker (moby) bug: https://github.com/moby/moby/issues/33410
# Without a successful healthcheck, Traefik will not register the service for reverse-proxying.
# Thus, the health interval determines the initial start-up time -- the smaller, the better.
#
# For non-Traefik setups, we use the default healthcheck interval (60s) to decrease overhead.
paperless_container_health_interval: "{{ '5s' if paperless_container_labels_traefik_enabled else '60s' }}"

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
paperless_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
paperless_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
paperless_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
paperless_http_header_content_permission_policy: "{{ 'interest-cohort=()' if paperless_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
paperless_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if paperless_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `paperless_content_permission_policy`
paperless_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `paperless_http_header_strict_transport_security`
paperless_hsts_preload_enabled: false

# List of systemd services that Paperless-ngx systemd service depends on
paperless_systemd_required_services_list: "{{ paperless_systemd_required_services_list_default + paperless_systemd_required_services_list_auto + paperless_systemd_required_services_list_custom }}"
paperless_systemd_required_services_list_default: ['docker.service']
paperless_systemd_required_services_list_auto: []
paperless_systemd_required_services_list_custom: []

# In mb, default is 10gb
paperless_tmp_size: 10000

paperless_url: '{{ paperless_scheme }}://{{ paperless_hostname }}'
paperless_app_title: 'Paperless-ngx'
paperless_secret_key: ''

paperless_admin_user: ''
paperless_admin_password: ''

# Valid values: debug, info, warning, error, critical
paperless_loglevel: error

paperless_database_hostname: ''
paperless_database_port: 5432
paperless_database_name: paperless
paperless_database_username: ''
paperless_database_password: ''
# Use this to set the sslmode parameter of the SSL connection
# By default, we expect a local container (without SSL), so attempting SSL connections is not necessary.
paperless_database_sslmode: disable

paperless_redis_hostname: ''
paperless_redis_port: 6379
paperless_redis_database: 0
paperless_redis_url: "redis://{{ paperless_redis_hostname }}:{{ paperless_redis_port }}/{{ paperless_redis_database }}"

# Turn true to use StartTLS (usually on port 587)
paperless_email_use_tls: false
# Turn true to use SSL (usually on port 465)
paperless_email_use_ssl: false
paperless_email_host: ''
paperless_email_port: ''
paperless_email_username: ''
paperless_email_password: ''
paperless_email_from: "noreply@{{ paperless_hostname }}"

# Additional environment variables to pass to the Paperless-ngx container.
# You can use this to further influence the default configuration.
# Check https://gopaperless.io/docs/installation/configuration for a full configuration reference
#
# Example:
# paperless_variables_additional_variables: |
#   paperless_DISABLE_UPDATE_CHECK=true
paperless_variables_additional_variables: ''

########################
## Tika and Gotenberg ##
########################

# Project source code URL: https://github.com/apache/tika
paperless_tika_enabled: false
paperless_tika_identifier: "{{ paperless_identifier }}-tika"
paperless_tika_endpoint: "http://{{ paperless_tika_identifier }}:9998"

# renovate: datasource=docker depName=apache/tika versioning=semver
paperless_tika_version: "3.1.0.0"

paperless_tika_container_image: "{{ paperless_tika_container_image_registry_prefix }}apache/tika:{{ paperless_tika_container_image_tag }}"
paperless_tika_container_image_tag: "{{ paperless_tika_version }}"
paperless_tika_container_image_registry_prefix: "{{ paperless_tika_container_image_registry_prefix_upstream }}"
paperless_tika_container_image_registry_prefix_upstream: "{{ paperless_tika_container_image_registry_prefix_upstream_default }}"
paperless_tika_container_image_registry_prefix_upstream_default: docker.io/

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
paperless_tika_container_additional_volumes: []

paperless_tika_variables_additional_variables: ''
paperless_tika_container_labels_additional_labels: ''

# Project source code URL: https://github.com/gotenberg/gotenberg
paperless_gotenberg_enabled: false
paperless_gotenberg_identifier: "{{ paperless_identifier }}-gotenberg"
paperless_gotenberg_endpoint: "http://{{ paperless_gotenberg_identifier }}:3000"

# renovate: datasource=docker depName=gotenberg/gotenberg versioning=semver
paperless_gotenberg_version: "8.20.1"

paperless_gotenberg_container_image: "{{ paperless_gotenberg_container_image_registry_prefix }}gotenberg/gotenberg:{{ paperless_gotenberg_container_image_tag }}"
paperless_gotenberg_container_image_tag: "{{ paperless_gotenberg_version }}"
paperless_gotenberg_container_image_registry_prefix: "{{ paperless_gotenberg_container_image_registry_prefix_upstream }}"
paperless_gotenberg_container_image_registry_prefix_upstream: "{{ paperless_gotenberg_container_image_registry_prefix_upstream_default }}"
paperless_gotenberg_container_image_registry_prefix_upstream_default: docker.io/

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
paperless_gotenberg_container_additional_volumes: []

paperless_gotenberg_variables_additional_variables: ''
paperless_gotenberg_container_labels_additional_labels: ''

################
## Monitoring ##
################

paperless_metrics_enabled: false
paperless_metrics_path_prefix: '/metrics'
paperless_metrics_container_labels_traefik_rule: "Host(`{{ paperless_hostname }}`) && PathPrefix(`{{ paperless_metrics_path_prefix | quote }}`)"
paperless_metrics_container_labels_traefik_entrypoints: web-secure
paperless_metrics_container_labels_traefik_tls: "{{ paperless_metrics_container_labels_traefik_entrypoints != 'web' }}"
paperless_metrics_container_labels_traefik_tls_certResolver: default  # noqa var-naming
